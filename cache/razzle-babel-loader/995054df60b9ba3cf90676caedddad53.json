{"ast":null,"code":"var _jsxFileName = \"/Users/mumu/myTest/Test-Git/src/server.js\";\nvar __jsx = React.createElement;\nimport App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, ...extra) => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\" ${extra.join(\" \")}></script>`).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  const context = {};\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })));\n  const html = `<!doctype html>\n  <html lang=\"\">\n  <head>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charset=\"utf-8\" />\n      <title>Welcome to Razzle</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      ${cssLinksFromAssets(assets, 'client')}\n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(assets, 'client', 'defer', 'crossorigin')}\n  </body>\n</html>`;\n  return {\n    context,\n    html\n  };\n};\nconst server = express();\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const {\n    context,\n    html\n  } = renderApp(req, res);\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(html);\n  }\n});\nexport default server;","map":{"version":3,"sources":["/Users/mumu/myTest/Test-Git/src/server.js"],"names":["App","React","StaticRouter","express","renderToString","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","context","markup","url","html","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","redirect","status","send"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,kBAAkB,GAAG,CAACL,MAAD,EAASM,UAAT,KAAwB;AACjD,SAAON,MAAM,CAACM,UAAD,CAAN,GAAqBN,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,GAC5BP,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,CAAuBC,GAAvB,CAA2BC,KAAK,IAC7B,gCAA+BA,KAAM,IADxC,EAEEC,IAFF,CAEO,EAFP,CAD4B,GAGf,EAHN,GAGW,EAHlB;AAID,CALD;;AAOA,MAAMC,sBAAsB,GAAG,CAACX,MAAD,EAASM,UAAT,EAAqB,GAAGM,KAAxB,KAAkC;AAC/D,SAAOZ,MAAM,CAACM,UAAD,CAAN,GAAqBN,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,GAC5Bb,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,CAAsBL,GAAtB,CAA0BC,KAAK,IAC5B,gBAAeA,KAAM,KAAIG,KAAK,CAACF,IAAN,CAAW,GAAX,CAAgB,YAD5C,EAEEA,IAFF,CAEO,EAFP,CAD4B,GAGf,EAHN,GAGW,EAHlB;AAID,CALD;;AAOA,OAAO,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrC,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAGnB,cAAc,CAC3B,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEkB,OAAvB;AAAgC,IAAA,QAAQ,EAAEF,GAAG,CAACI,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAD2B,CAA7B;AAKA,QAAMC,IAAI,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQf,kBAAkB,CAACL,MAAD,EAAS,QAAT,CAAmB;AAC7C;AACA;AACA,uBAAuBkB,MAAO;AAC9B,QAAQP,sBAAsB,CAACX,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,aAA5B,CAA2C;AACzE;AACA,QAbE;AAcA,SAAO;AAACiB,IAAAA,OAAD;AAAUG,IAAAA;AAAV,GAAP;AACD,CAtBM;AAwBP,MAAMC,MAAM,GAAGvB,OAAO,EAAtB;AACAuB,MAAM,CACHC,OADH,CACW,cADX,EAEGC,GAFH,CAEOzB,OAAO,CAAC0B,MAAR,CAAetB,OAAO,CAACC,GAAR,CAAYsB,iBAA3B,CAFP,EAGGC,GAHH,CAGO,IAHP,EAGa,CAACX,GAAD,EAAMC,GAAN,KAAc;AACvB,QAAM;AAACC,IAAAA,OAAD;AAAUG,IAAAA;AAAV,MAAkBN,SAAS,CAACC,GAAD,EAAMC,GAAN,CAAjC;;AACA,MAAIC,OAAO,CAACE,GAAZ,EAAiB;AACfH,IAAAA,GAAG,CAACW,QAAJ,CAAaV,OAAO,CAACE,GAArB;AACD,GAFD,MAEO;AACLH,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,IAArB;AACD;AACF,CAVH;AAYA,eAAeC,MAAf","sourcesContent":["import App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n  assets[entrypoint].css.map(asset=>\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\n  ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, ...extra) => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n  assets[entrypoint].js.map(asset=>\n    `<script src=\"${asset}\" ${extra.join(\" \")}></script>`\n  ).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  const context = {};\n  const markup = renderToString(\n    <StaticRouter context={context} location={req.url}>\n      <App />\n    </StaticRouter>\n  );\n  const html = `<!doctype html>\n  <html lang=\"\">\n  <head>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charset=\"utf-8\" />\n      <title>Welcome to Razzle</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      ${cssLinksFromAssets(assets, 'client')}\n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(assets, 'client', 'defer', 'crossorigin')}\n  </body>\n</html>`\n  return {context, html};\n}\n\nconst server = express();\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const {context, html} = renderApp(req, res);\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      res.status(200).send(html);\n    }\n  });\n\nexport default server;\n"]},"metadata":{},"sourceType":"module"}